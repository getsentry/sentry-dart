plugins {
    id "com.android.application"
    id "kotlin-android"
    id "dev.flutter.flutter-gradle-plugin"

//    uncomment this to upload proguard mapping file and debug symbols to Sentry
//    and also set the token (sentry.properties) file
//    id "io.sentry.android.gradle"
}

def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

android {
    namespace = "io.sentry.samples.flutter"
    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_1_8
        targetCompatibility = JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8
        languageVersion = "1.4"
    }

    compileSdkVersion 35

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    defaultConfig {
        applicationId "io.sentry.samples.flutter"
        minSdkVersion flutter.minSdkVersion
        targetSdkVersion 35
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName

        externalNativeBuild {
            cmake {
                arguments.addAll([
                    "-DANDROID_STL=c++_static",
                    // https://developer.android.com/guide/practices/page-sizes#compile-r27
                    "-DANDROID_SUPPORT_FLEXIBLE_PAGE_SIZES=ON"
                ])
            }
        }

        ndk {
            // Flutter does not currently support building for x86 Android (See Issue 9253).
            abiFilters("armeabi-v7a", "x86_64", "arm64-v8a")
        }
    }

    ndkVersion "27.2.12479018"

    externalNativeBuild {
        cmake {
            setPath("CMakeLists.txt")
        }
    }

    buildTypes {
        release {
            // looks like Flutter requires minifyEnabled to be enabled or it throws
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.debug
        }
    }

    lintOptions {
        // workaround if using AGP 4.0 on release mode
        // https://github.com/flutter/flutter/issues/58247
        checkReleaseBuilds false
    }
}

flutter {
    source '../..'
}

dependencies {
    implementation "androidx.annotation:annotation:1.1.0"
}

// uncomment this to upload debug symbols to Sentry
// sentry {
//     uploadNativeSymbols = true
//     includeNativeSources = true
// }
