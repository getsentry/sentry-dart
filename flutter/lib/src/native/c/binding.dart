// AUTO GENERATED FILE, DO NOT EDIT.
//
// Generated by `package:ffigen`.
// ignore_for_file: type=lint
import 'dart:ffi' as ffi;

/// Sentry Native SDK FFI binding.
class SentryNative {
  /// Holds the symbol lookup function.
  final ffi.Pointer<T> Function<T extends ffi.NativeType>(String symbolName)
      _lookup;

  /// The symbols are looked up in [dynamicLibrary].
  SentryNative(ffi.DynamicLibrary dynamicLibrary)
      : _lookup = dynamicLibrary.lookup;

  /// The symbols are looked up with [lookup].
  SentryNative.fromLookup(
      ffi.Pointer<T> Function<T extends ffi.NativeType>(String symbolName)
          lookup)
      : _lookup = lookup;

  /// Initializes the Sentry SDK with the specified options.
  ///
  /// This takes ownership of the options.  After the options have been set
  /// they cannot be modified any more.
  /// Depending on the configured transport and backend, this function might not be
  /// fully thread-safe.
  /// Returns 0 on success.
  int sentry_init(
    ffi.Pointer<sentry_options_s> options,
  ) {
    return _sentry_init(
      options,
    );
  }

  late final _sentry_initPtr = _lookup<
          ffi.NativeFunction<ffi.Int Function(ffi.Pointer<sentry_options_s>)>>(
      'sentry_init');
  late final _sentry_init =
      _sentry_initPtr.asFunction<int Function(ffi.Pointer<sentry_options_s>)>();
}

/// The Sentry Client Options.
///
/// See https://docs.sentry.io/platforms/native/configuration/
class sentry_options_s extends ffi.Opaque {}
