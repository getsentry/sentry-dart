name: flutter native & integration test
on:
  push:
    branches:
      - main
      - release/**
  pull_request:
    paths-ignore:
      - 'file/**'

env:
  SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}

jobs:
  cancel-previous-workflow:
    runs-on: ubuntu-latest
    steps:
      - name: Cancel Previous Runs
        uses: styfle/cancel-workflow-action@b173b6ec0100793626c2d9e6b90435061f4fc3e5 # pin@0.11.0
        with:
          access_token: ${{ github.token }}

  test-android:
    runs-on: macos-latest
    timeout-minutes: 30
    defaults:
      run:
        working-directory: ./flutter/example
    strategy:
      fail-fast: false
      matrix:
        sdk: ["stable", "beta"]
    steps:
      - name: checkout
        uses: actions/checkout@v3

      - uses: actions/setup-java@v3
        with:
          distribution: "adopt"
          java-version: "11"

      - uses: subosito/flutter-action@48cafc24713cca54bbe03cdc3a423187d413aafa # pin@v2.10.0
        with:
          channel: ${{ matrix.sdk }}

      - name: flutter upgrade
        run: flutter upgrade

      - name: flutter pub get
        run: flutter pub get

      - name: Gradle cache
        uses: gradle/gradle-build-action@v2

      - name: AVD cache
        uses: actions/cache@v3
        id: avd-cache
        with:
          path: |
            ~/.android/avd/*
            ~/.android/adb*
          key: avd-31

      - name: create AVD and generate snapshot for caching
        if: steps.avd-cache.outputs.cache-hit != 'true'
        uses: reactivecircus/android-emulator-runner@d94c3fbe4fe6a29e4a5ba47c12fb47677c73656b #pin@v2.28.0
        with:
          working-directory: ./flutter/example
          api-level: 31
          profile: Nexus 6
          arch: x86_64
          force-avd-creation: false
          avd-name: macOS-avd-x86_64-31
          emulator-options: -no-snapshot-save -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
          disable-animations: true
          script: echo 'Generated AVD snapshot for caching.'

      - name: build apk
        working-directory: ./flutter/example/android
        run: flutter build apk --debug

      - name: launch android emulator & run android native test
        uses: reactivecircus/android-emulator-runner@d94c3fbe4fe6a29e4a5ba47c12fb47677c73656b #pin@v2.28.0
        with:
          working-directory: ./flutter/example/android
          api-level: 31
          profile: Nexus 6
          arch: x86_64
          force-avd-creation: false
          avd-name: macOS-avd-x86_64-31
          emulator-options: -no-snapshot-save -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
          disable-animations: true
          script: ./gradlew testDebugUnitTest

      - name: launch android emulator & run android integration test
        uses: reactivecircus/android-emulator-runner@d94c3fbe4fe6a29e4a5ba47c12fb47677c73656b #pin@v2.28.0
        with:
          working-directory: ./flutter/example
          api-level: 31
          profile: Nexus 6
          arch: x86_64
          force-avd-creation: false
          avd-name: macOS-avd-x86_64-31
          emulator-options: -no-snapshot-save -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
          disable-animations: true
          script: flutter test integration_test/integration_test.dart --verbose

  test-ios:
    runs-on: macos-13
    timeout-minutes: 30
    defaults:
      run:
        working-directory: ./flutter/example
    strategy:
      fail-fast: false
      matrix:
        # 'beta' is flaky because of https://github.com/flutter/flutter/issues/124340
        sdk: ["stable"]
    steps:
      - name: checkout
        uses: actions/checkout@v3

      - uses: subosito/flutter-action@48cafc24713cca54bbe03cdc3a423187d413aafa # pin@v2.10.0
        with:
          channel: ${{ matrix.sdk }}

      - name: flutter upgrade
        run: flutter upgrade

      - name: flutter pub get
        run: flutter pub get

      - name: pod install
        working-directory: ./flutter/example/ios
        run: pod install

      - name: launch ios simulator
        id: sim
        run: |
          simulator_id=$(xcrun simctl create sentryPhone com.apple.CoreSimulator.SimDeviceType.iPhone-14 com.apple.CoreSimulator.SimRuntime.iOS-16-4)
          echo "SIMULATOR_ID=${simulator_id}" >> "$GITHUB_OUTPUT"
          xcrun simctl boot ${simulator_id}
# Disable flutter integration tests because of flaky execution
#      - name: run ios integration test
#        env:
#          SIMULATOR_ID: ${{ steps.sim.outputs.SIMULATOR_ID }}
#        run: flutter test -d "$SIMULATOR_ID" integration_test/integration_test.dart --verbose

      - name: run ios native test
        working-directory: ./flutter/example/ios
        env:
          SIMULATOR_ID: ${{ steps.sim.outputs.SIMULATOR_ID }}
        run: xcodebuild test -workspace Runner.xcworkspace -scheme Runner -configuration Debug -destination "platform=iOS Simulator,id=$SIMULATOR_ID" -allowProvisioningUpdates CODE_SIGNING_ALLOWED=NO


