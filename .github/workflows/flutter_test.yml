name: flutter native & integration test
on:
  push:
    branches:
      - main
      - release/**
  pull_request:
    paths:
      - "!**/*.md"
      - "!**/class-diagram.svg"
      - ".github/workflows/flutter_test.yml"
      - "dart/**"
      - "flutter/**"

env:
  SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}

jobs:
  cancel-previous-workflow:
    runs-on: ubuntu-latest
    steps:
      - name: Cancel Previous Runs
        uses: styfle/cancel-workflow-action@85880fa0301c86cca9da44039ee3bb12d3bedbfa # pin@0.12.1
        with:
          access_token: ${{ github.token }}

  test-android:
    runs-on: macos-latest
    timeout-minutes: 30
    defaults:
      run:
        working-directory: ./flutter/example
    strategy:
      fail-fast: false
      matrix:
        sdk: ["stable", "beta"]
    steps:
      - name: checkout
        uses: actions/checkout@v4

      - uses: actions/setup-java@v4
        with:
          distribution: "adopt"
          java-version: "11"

      - uses: subosito/flutter-action@44ac965b96f18d999802d4b807e3256d5a3f9fa1 # pin@v2.16.0
        with:
          channel: ${{ matrix.sdk }}

      - name: flutter upgrade
        run: flutter upgrade

      - name: flutter pub get
        run: flutter pub get

      - name: Gradle cache
        uses: gradle/gradle-build-action@8baac4c8ef753599f92eeb509c246d09d6250fa6

      - name: AVD cache
        uses: actions/cache@v4
        id: avd-cache
        with:
          path: |
            ~/.android/avd/*
            ~/.android/adb*
          key: avd-31

      - name: create AVD and generate snapshot for caching
        if: steps.avd-cache.outputs.cache-hit != 'true'
        uses: reactivecircus/android-emulator-runner@6b0df4b0efb23bb0ec63d881db79aefbc976e4b2 #pin@v2.30.1
        with:
          working-directory: ./flutter/example
          api-level: 31
          profile: Nexus 6
          arch: x86_64
          force-avd-creation: false
          avd-name: macOS-avd-x86_64-31
          emulator-options: -no-snapshot-save -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
          disable-animations: true
          script: echo 'Generated AVD snapshot for caching.'

      - name: build apk
        working-directory: ./flutter/example/android
        run: flutter build apk --debug

      - name: launch android emulator & run android native test
        uses: reactivecircus/android-emulator-runner@6b0df4b0efb23bb0ec63d881db79aefbc976e4b2 #pin@v2.30.1
        with:
          working-directory: ./flutter/example/android
          api-level: 31
          profile: Nexus 6
          arch: x86_64
          force-avd-creation: false
          avd-name: macOS-avd-x86_64-31
          emulator-options: -no-snapshot-save -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
          disable-animations: true
          script: ./gradlew testDebugUnitTest

      - name: launch android emulator & run android integration test
        uses: reactivecircus/android-emulator-runner@6b0df4b0efb23bb0ec63d881db79aefbc976e4b2 #pin@v2.30.1
        with:
          working-directory: ./flutter/example
          api-level: 31
          profile: Nexus 6
          arch: x86_64
          force-avd-creation: false
          avd-name: macOS-avd-x86_64-31
          emulator-options: -no-snapshot-save -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
          disable-animations: true
          script: flutter test integration_test/all.dart --verbose

  cocoa:
    name: "${{ matrix.target }} | ${{ matrix.sdk }}"
    runs-on: macos-latest-xlarge
    timeout-minutes: 30
    defaults:
      run:
        working-directory: ./flutter/example
    strategy:
      fail-fast: false
      matrix:
        sdk: ["stable", "beta"]
        # TODO: remove ios for now, will be fixed in v8
        target: ["macos"]
    steps:
      - name: checkout
        uses: actions/checkout@v4

      - uses: subosito/flutter-action@44ac965b96f18d999802d4b807e3256d5a3f9fa1 # pin@v2.16.0
        with:
          channel: ${{ matrix.sdk }}

      - name: flutter upgrade
        run: flutter upgrade

      - name: flutter pub get
        run: flutter pub get

      - name: pod install
        working-directory: ./flutter/example/${{ matrix.target }}
        run: pod install

      - name: prepare test device
        id: device
        run: |
          case "${{ matrix.target }}" in
            ios)
            device=$(xcrun simctl create sentryPhone com.apple.CoreSimulator.SimDeviceType.iPhone-14 com.apple.CoreSimulator.SimRuntime.iOS-17-0)
            xcrun simctl boot ${device}
            echo "platform=iOS Simulator,id=${device}" >> "$GITHUB_OUTPUT"
            ;;
            macos)
            device="macos"
            echo "platform=OS X" >> "$GITHUB_OUTPUT"
            ;;
            esac
          echo "name=${device}" >> "$GITHUB_OUTPUT"

      - name: run integration test
        # Disable flutter integration tests for iOS for now (https://github.com/getsentry/sentry-dart/issues/1605#issuecomment-1695809346)
        if: ${{ matrix.target != 'ios' }}
        run: flutter test -d "${{ steps.device.outputs.name }}" integration_test/all.dart --verbose

      - name: run native test
        # We only have the native unit test package in the iOS xcodeproj at the moment.
        # Should be OK because it will likely be removed after switching to FFI (see https://github.com/getsentry/sentry-dart/issues/1444).
        if: ${{ matrix.target != 'macos' }}
        working-directory: ./flutter/example/${{ matrix.target }}
        run: xcodebuild test -workspace Runner.xcworkspace -scheme Runner -configuration Debug -destination "platform=${{ steps.device.outputs.platform }}" -allowProvisioningUpdates CODE_SIGNING_ALLOWED=NO
