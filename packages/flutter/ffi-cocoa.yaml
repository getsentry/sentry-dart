name: SentryCocoa
description: Sentry Cocoa SDK FFI binding.
language: objc
output: lib/src/native/cocoa/binding.dart
headers:
  entry-points:
    - ./temp/Sentry.framework/PrivateHeaders/PrivateSentrySDKOnly.h
    - ./temp/Sentry.framework/Headers/Sentry-Swift.h
    - ./temp/Sentry.framework/Headers/SentryScope.h
    - ./temp/Sentry.framework/Headers/SentryOptions.h
    - ./temp/Sentry.framework/Headers/SentryDebugMeta.h
    - ./temp/Sentry.framework/PrivateHeaders/SentryDependencyContainer.h
    - ./temp/Sentry.framework/PrivateHeaders/SentryDebugImageProvider+HybridSDKs.h
    - ./temp/Sentry.framework/PrivateHeaders/SentryBinaryImageCache.h
    - ./ios/sentry_flutter/Sources/sentry_flutter_objc/SentryFlutterFFI.h
compiler-opts:
  - -DSENTRY_TARGET_PROFILING_SUPPORTED=1
  - -DCOCOAPODS=1
  - "-I./temp/Sentry.framework/Headers/"
  - "-I./temp/Sentry.framework/PrivateHeaders/"
  - "-I./ios/sentry_flutter/Sources/sentry_flutter_objc/"
exclude-all-by-default: true
objc-interfaces:
  include:
    - PrivateSentrySDKOnly
    - SentrySDK
    - SentryScope
    - SentryId
    - SentryOptions
    - SentryDependencyContainer
    - SentryDebugImageProvider
    - SentryBinaryImageCache
    - SentryBinaryImageInfo
    - SentryDebugMeta
    - SentryFlutterFFI
  module:
    "SentryId": "Sentry"
    "SentrySDK": "Sentry"
    "SentryLevel": "Sentry"
  member-filter:
    SentryOptions:
      include:
        - "integrations"
    SentryScope:
      include:
        - "serialize"
    SentrySDK:
      include:
        - "configureScope:"
    SentryDependencyContainer:
      include:
        - "sharedInstance"
        - "binaryImageCache"
        - "debugImageProvider"
    SentryBinaryImageCache:
      include:
        - "imageByAddress:"
    SentryDebugImageProvider:
      include:
        - "getDebugImagesForImageAddressesFromCache:"
enums:
  include:
    - "^SentryLevel$"
